{"version":3,"sources":["views/HomePage.js","services/themoviedb-api.js","components/MoviesList/MoviesList.js"],"names":["HomePage","state","movies","isLoading","this","setState","fetchPopularMovies","then","finally","length","Component","API_KEY","BASE_URL","URL_POPULAR","URL_ID","URL_QUERY","BASE_IMG_URL","Axios","get","params","page","api_key","data","results","catch","error","fetchMovieByID","id","language","fetchCreditsMovie","cast","fetchReviewsMovie","fetchMoviesByQuery","query","include_adult","withRouter","location","className","map","title","to","pathname","routes","from"],"mappings":"0PAKMA,E,4MACJC,MAAQ,CACNC,OAAQ,GACRC,WAAW,G,8LAIXC,KAAKC,SAAS,CAAEF,WAAW,I,SAErBG,cACHC,MAAK,SAAAL,GACJ,EAAKG,SAAS,CAAEH,cAEjBM,SAAQ,kBAAM,EAAKH,SAAS,CAAEF,WAAW,O,qIAGpC,IAAD,EACuBC,KAAKH,MAA3BC,EADD,EACCA,OAAQC,EADT,EACSA,UAChB,OACE,qCACE,gDACCA,GAAa,cAAC,IAAD,IACbD,EAAOO,OAAS,GAAK,cAAC,IAAD,CAAYP,OAAQA,W,GAtB3BQ,aA4BRV,a,gCCjCf,iOAEMW,EAAU,mCACVC,EAAW,gCACXC,EAAW,UAAMD,EAAN,sBACXE,EAAM,UAAMF,EAAN,UACNG,EAAS,UAAMH,EAAN,gBAETI,EAAe,uCAErB,SAASV,IACP,OAAOW,IAAMC,IAAN,UAAaL,GAAe,CACjCM,OAAQ,CAAEC,KAAM,EAAGC,QAASV,KAE3BJ,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASC,EAAeC,GACtB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,GAAM,CACjCR,OAAQ,CAAEE,QAASV,EAASiB,SAAU,WAErCrB,MAAK,qBAAGe,QACRE,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASI,EAAkBF,GACzB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,EAAtB,YAAoC,CACzCR,OAAQ,CAAEE,QAASV,EAASiB,SAAU,WAErCrB,MAAK,qBAAGe,KAAQQ,QAChBN,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASM,EAAkBJ,GACzB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,EAAtB,YAAoC,CACzCR,OAAQ,CAAEC,KAAM,EAAGC,QAASV,EAASiB,SAAU,WAE9CrB,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASO,EAAmBC,GAC1B,OAAOhB,IAAMC,IAAN,UAAaH,GAAa,CAC/BI,OAAQ,CAAEC,KAAM,EAAGC,QAASV,EAASiB,SAAU,QAASM,eAAe,EAAMD,MAAOA,KAEnF1B,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,O,mGCvBLU,eArBI,SAAC,GAA0B,IAAxBjC,EAAuB,EAAvBA,OAAQkC,EAAe,EAAfA,SAC5B,OACE,oBAAIC,UAAU,aAAd,SACGnC,EAAOoC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAP,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOxC,OAAZ,YAAsByB,GAC9B1B,MAAO,CACL0C,KAAMP,IAJZ,SAQGG,KATIZ","file":"static/js/home-page.2c004569.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Loader from '../components/Loader';\nimport { fetchPopularMovies } from '../services/themoviedb-api';\nimport MoviesList from '../components/MoviesList';\n\nclass HomePage extends Component {\n  state = {\n    movies: [],\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    await fetchPopularMovies()\n      .then(movies => {\n        this.setState({ movies });\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  render() {\n    const { movies, isLoading } = this.state;\n    return (\n      <>\n        <h1>Trending today</h1>\n        {isLoading && <Loader />}\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import Axios from 'axios';\n\nconst API_KEY = '8add86c956039dd3121ecd9270a2bde1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POPULAR = `${BASE_URL}trending/movie/day`;\nconst URL_ID = `${BASE_URL}movie/`;\nconst URL_QUERY = `${BASE_URL}search/movie`;\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nfunction fetchPopularMovies() {\n  return Axios.get(`${URL_POPULAR}`, {\n    params: { page: 1, api_key: API_KEY },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nfunction fetchMovieByID(id) {\n  return Axios.get(`${URL_ID}${id}`, {\n    params: { api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data }) => data)\n    .catch(error => error);\n}\n\nfunction fetchCreditsMovie(id) {\n  return Axios.get(`${URL_ID}${id}/credits`, {\n    params: { api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data: { cast } }) => cast)\n    .catch(error => error);\n}\n\nfunction fetchReviewsMovie(id) {\n  return Axios.get(`${URL_ID}${id}/reviews`, {\n    params: { page: 1, api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nfunction fetchMoviesByQuery(query) {\n  return Axios.get(`${URL_QUERY}`, {\n    params: { page: 1, api_key: API_KEY, language: 'en-US', include_adult: true, query: query },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nexport {\n  fetchPopularMovies,\n  fetchMovieByID,\n  fetchCreditsMovie,\n  fetchReviewsMovie,\n  fetchMoviesByQuery,\n  BASE_IMG_URL,\n};\n","import { Link, withRouter } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className=\"MoviesList\">\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `${routes.movies}/${id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default withRouter(MoviesList);\n"],"sourceRoot":""}