{"version":3,"sources":["utils/parseQueryString.js","components/Notification/Notification.js","components/Searchbar/Searchbar.js","views/MoviesPage.js","services/themoviedb-api.js","components/MoviesList/MoviesList.js"],"names":["parseQueryString","query","queryString","parse","NotificationContainer","position","autoClose","hideProgressBar","newestOnTop","pauseOnHover","closeOnClick","draggable","progress","undefined","transition","Zoom","pauseOnFocusLoss","rtl","limit","showErrorNotification","message","objSettings","toast","error","Searchbar","state","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onSubmit","props","trim","toLowerCase","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPage","movies","handleFetchhMovies","fetchMoviesByQuery","then","length","handleQueryFromSearchbar","history","push","location","search","prevProps","prevState","prevQuery","MoviesList","API_KEY","BASE_URL","URL_POPULAR","URL_ID","URL_QUERY","BASE_IMG_URL","fetchPopularMovies","Axios","get","params","page","api_key","data","results","catch","fetchMovieByID","id","language","fetchCreditsMovie","cast","fetchReviewsMovie","include_adult","withRouter","map","title","to","pathname","routes","from"],"mappings":"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","file":"static/js/movies-page.bc97729f.chunk.js","sourcesContent":["import queryString from 'query-string';\n\nexport default function parseQueryString(query) {\n  return queryString.parse(query);\n}\n","import PropTypes from 'prop-types';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst NotificationContainer = ({ position = 'top-right', autoClose = 3000 }) => {\n  return (\n    <ToastContainer\n      position={position}\n      autoClose={autoClose}\n      hideProgressBar={false}\n      newestOnTop={false}\n      pauseOnHover={true}\n      closeOnClick={true}\n      draggable={true}\n      progress={undefined}\n      transition={Zoom}\n      pauseOnFocusLoss\n      rtl={false}\n      limit={1}\n    />\n  );\n};\n\nconst showErrorNotification = (message, objSettings) => {\n  toast.error(message, objSettings);\n};\n\nNotificationContainer.propTypes = {\n  position: PropTypes.string,\n  autoClose: PropTypes.number,\n};\n\nexport { NotificationContainer, showErrorNotification };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { showErrorNotification } from '../Notification';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const { onSubmit } = this.props;\n    if (!query.trim()) {\n      showErrorNotification('Input search query.', { position: 'top-center' });\n      return this.setState({ query: '' });\n    }\n    onSubmit(query.trim().toLowerCase());\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <div className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import { Component } from 'react';\nimport parseQueryString from '../utils/parseQueryString';\nimport SearchBar from '../components/Searchbar';\nimport { NotificationContainer } from '../components/Notification';\nimport { fetchMoviesByQuery } from '../services/themoviedb-api';\nimport MoviesList from '../components/MoviesList';\n\nclass MoviesPage extends Component {\n  state = {\n    movies: [],\n    error: null,\n  };\n  async componentDidMount() {\n    const { query } = parseQueryString(this.props.location.search);\n    if (query) {\n      await this.handleFetchhMovies(query);\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = parseQueryString(prevProps.location.search);\n    const { query } = parseQueryString(this.props.location.search);\n    if (prevQuery !== query) {\n      await this.handleFetchhMovies(query);\n    }\n  }\n\n  handleFetchhMovies = query => {\n    fetchMoviesByQuery(query).then(movies => {\n      if (movies.length === 0) {\n        return this.setState({ movies: [], error: 'Нет результатов' });\n      }\n      this.setState({ movies, error: null });\n    });\n  };\n\n  handleQueryFromSearchbar = query => {\n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    const { movies, error } = this.state;\n    const { query } = parseQueryString(this.props.location.search);\n    return (\n      <>\n        <SearchBar onSubmit={this.handleQueryFromSearchbar} />\n        {!error ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <h1>\n            Нет совпадений по запросу <i>\"{query}\"</i>\n          </h1>\n        )}\n        <NotificationContainer />\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import Axios from 'axios';\n\nconst API_KEY = '8add86c956039dd3121ecd9270a2bde1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst URL_POPULAR = `${BASE_URL}trending/movie/day`;\nconst URL_ID = `${BASE_URL}movie/`;\nconst URL_QUERY = `${BASE_URL}search/movie`;\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nfunction fetchPopularMovies() {\n  return Axios.get(`${URL_POPULAR}`, {\n    params: { page: 1, api_key: API_KEY },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nfunction fetchMovieByID(id) {\n  return Axios.get(`${URL_ID}${id}`, {\n    params: { api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data }) => data)\n    .catch(error => error);\n}\n\nfunction fetchCreditsMovie(id) {\n  return Axios.get(`${URL_ID}${id}/credits`, {\n    params: { api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data: { cast } }) => cast)\n    .catch(error => error);\n}\n\nfunction fetchReviewsMovie(id) {\n  return Axios.get(`${URL_ID}${id}/reviews`, {\n    params: { page: 1, api_key: API_KEY, language: 'en-US' },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nfunction fetchMoviesByQuery(query) {\n  return Axios.get(`${URL_QUERY}`, {\n    params: { page: 1, api_key: API_KEY, language: 'en-US', include_adult: true, query: query },\n  })\n    .then(({ data: { results } }) => results)\n    .catch(error => error);\n}\n\nexport {\n  fetchPopularMovies,\n  fetchMovieByID,\n  fetchCreditsMovie,\n  fetchReviewsMovie,\n  fetchMoviesByQuery,\n  BASE_IMG_URL,\n};\n","import { Link, withRouter } from 'react-router-dom';\nimport routes from '../../routes';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className=\"MoviesList\">\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `${routes.movies}/${id}`,\n              state: {\n                from: location,\n              },\n            }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default withRouter(MoviesList);\n"],"sourceRoot":""}